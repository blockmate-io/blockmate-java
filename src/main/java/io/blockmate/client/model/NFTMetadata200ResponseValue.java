/*
 * Blockmate
 * Blockmate API OpenAPI documentation
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.blockmate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.blockmate.client.model.OwnedNft;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The response format is dependent on a third-party, so it can change in the future.
 */
@ApiModel(description = "The response format is dependent on a third-party, so it can change in the future.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NFTMetadata200ResponseValue {
  public static final String SERIALIZED_NAME_OWNED_NFTS = "ownedNfts";
  @SerializedName(SERIALIZED_NAME_OWNED_NFTS)
  private List<OwnedNft> ownedNfts = null;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "totalCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private String totalCount;

  public static final String SERIALIZED_NAME_BLOCK_HASH = "blockHash";
  @SerializedName(SERIALIZED_NAME_BLOCK_HASH)
  private String blockHash;

  public NFTMetadata200ResponseValue() {
  }

  public NFTMetadata200ResponseValue ownedNfts(List<OwnedNft> ownedNfts) {
    
    this.ownedNfts = ownedNfts;
    return this;
  }

  public NFTMetadata200ResponseValue addOwnedNftsItem(OwnedNft ownedNftsItem) {
    if (this.ownedNfts == null) {
      this.ownedNfts = new ArrayList<>();
    }
    this.ownedNfts.add(ownedNftsItem);
    return this;
  }

   /**
   * Get ownedNfts
   * @return ownedNfts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OwnedNft> getOwnedNfts() {
    return ownedNfts;
  }


  public void setOwnedNfts(List<OwnedNft> ownedNfts) {
    this.ownedNfts = ownedNfts;
  }


  public NFTMetadata200ResponseValue totalCount(String totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * String - Total number of NFTs owned by the given address.
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String - Total number of NFTs owned by the given address.")

  public String getTotalCount() {
    return totalCount;
  }


  public void setTotalCount(String totalCount) {
    this.totalCount = totalCount;
  }


  public NFTMetadata200ResponseValue blockHash(String blockHash) {
    
    this.blockHash = blockHash;
    return this;
  }

   /**
   * String - The canonical head block hash of when your request was received
   * @return blockHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String - The canonical head block hash of when your request was received")

  public String getBlockHash() {
    return blockHash;
  }


  public void setBlockHash(String blockHash) {
    this.blockHash = blockHash;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NFTMetadata200ResponseValue nfTMetadata200ResponseValue = (NFTMetadata200ResponseValue) o;
    return Objects.equals(this.ownedNfts, nfTMetadata200ResponseValue.ownedNfts) &&
        Objects.equals(this.totalCount, nfTMetadata200ResponseValue.totalCount) &&
        Objects.equals(this.blockHash, nfTMetadata200ResponseValue.blockHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ownedNfts, totalCount, blockHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NFTMetadata200ResponseValue {\n");
    sb.append("    ownedNfts: ").append(toIndentedString(ownedNfts)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    blockHash: ").append(toIndentedString(blockHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

