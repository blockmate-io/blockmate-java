/*
 * Blockmate
 * Blockmate API OpenAPI documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.blockmate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.blockmate.client.model.NftIdTokenMetadata;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NftId
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NftId {
  public static final String SERIALIZED_NAME_TOKEN_ID = "tokenId";
  @SerializedName(SERIALIZED_NAME_TOKEN_ID)
  private String tokenId;

  public static final String SERIALIZED_NAME_TOKEN_METADATA = "tokenMetadata";
  @SerializedName(SERIALIZED_NAME_TOKEN_METADATA)
  private NftIdTokenMetadata tokenMetadata;

  public NftId() {
  }

  public NftId tokenId(String tokenId) {
    
    this.tokenId = tokenId;
    return this;
  }

   /**
   * String - The ID of the token. Can be in hex or decimal format.
   * @return tokenId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String - The ID of the token. Can be in hex or decimal format.")

  public String getTokenId() {
    return tokenId;
  }


  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }


  public NftId tokenMetadata(NftIdTokenMetadata tokenMetadata) {
    
    this.tokenMetadata = tokenMetadata;
    return this;
  }

   /**
   * Get tokenMetadata
   * @return tokenMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NftIdTokenMetadata getTokenMetadata() {
    return tokenMetadata;
  }


  public void setTokenMetadata(NftIdTokenMetadata tokenMetadata) {
    this.tokenMetadata = tokenMetadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NftId nftId = (NftId) o;
    return Objects.equals(this.tokenId, nftId.tokenId) &&
        Objects.equals(this.tokenMetadata, nftId.tokenMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tokenId, tokenMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NftId {\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    tokenMetadata: ").append(toIndentedString(tokenMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

