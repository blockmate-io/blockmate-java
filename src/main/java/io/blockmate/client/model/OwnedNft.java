/*
 * Blockmate
 * Blockmate API OpenAPI documentation
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.blockmate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.blockmate.client.model.Metadata;
import io.blockmate.client.model.NftContractMetadata;
import io.blockmate.client.model.NftId;
import io.blockmate.client.model.NftSpamInfo;
import io.blockmate.client.model.NftTokenUri;
import io.blockmate.client.model.OwnedNftContract;
import io.blockmate.client.model.OwnedNftMedia;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OwnedNft
 */
@ApiModel(description = "OwnedNft")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OwnedNft {
  public static final String SERIALIZED_NAME_CONTRACT = "contract";
  @SerializedName(SERIALIZED_NAME_CONTRACT)
  private OwnedNftContract contract;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private NftId id;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private String balance;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TOKEN_URI = "tokenUri";
  @SerializedName(SERIALIZED_NAME_TOKEN_URI)
  private NftTokenUri tokenUri;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private OwnedNftMedia media;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Metadata metadata;

  public static final String SERIALIZED_NAME_TIME_LAST_UPDATED = "timeLastUpdated";
  @SerializedName(SERIALIZED_NAME_TIME_LAST_UPDATED)
  private String timeLastUpdated;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private String error;

  public static final String SERIALIZED_NAME_CONTRACT_METADATA = "contractMetadata";
  @SerializedName(SERIALIZED_NAME_CONTRACT_METADATA)
  private NftContractMetadata contractMetadata;

  public static final String SERIALIZED_NAME_SPAM_INFO = "spamInfo";
  @SerializedName(SERIALIZED_NAME_SPAM_INFO)
  private NftSpamInfo spamInfo;

  public OwnedNft() {
  }

  public OwnedNft contract(OwnedNftContract contract) {
    
    this.contract = contract;
    return this;
  }

   /**
   * Get contract
   * @return contract
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OwnedNftContract getContract() {
    return contract;
  }


  public void setContract(OwnedNftContract contract) {
    this.contract = contract;
  }


  public OwnedNft id(NftId id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NftId getId() {
    return id;
  }


  public void setId(NftId id) {
    this.id = id;
  }


  public OwnedNft balance(String balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * String - Token balance
   * @return balance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String - Token balance")

  public String getBalance() {
    return balance;
  }


  public void setBalance(String balance) {
    this.balance = balance;
  }


  public OwnedNft title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * String - Name of the NFT asset.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String - Name of the NFT asset.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public OwnedNft description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * String - Brief human-readable description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String - Brief human-readable description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public OwnedNft tokenUri(NftTokenUri tokenUri) {
    
    this.tokenUri = tokenUri;
    return this;
  }

   /**
   * Get tokenUri
   * @return tokenUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NftTokenUri getTokenUri() {
    return tokenUri;
  }


  public void setTokenUri(NftTokenUri tokenUri) {
    this.tokenUri = tokenUri;
  }


  public OwnedNft media(OwnedNftMedia media) {
    
    this.media = media;
    return this;
  }

   /**
   * Get media
   * @return media
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OwnedNftMedia getMedia() {
    return media;
  }


  public void setMedia(OwnedNftMedia media) {
    this.media = media;
  }


  public OwnedNft metadata(Metadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Metadata getMetadata() {
    return metadata;
  }


  public void setMetadata(Metadata metadata) {
    this.metadata = metadata;
  }


  public OwnedNft timeLastUpdated(String timeLastUpdated) {
    
    this.timeLastUpdated = timeLastUpdated;
    return this;
  }

   /**
   * String - ISO timestamp of the last cache refresh for the information returned in the metadata field.
   * @return timeLastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.")

  public String getTimeLastUpdated() {
    return timeLastUpdated;
  }


  public void setTimeLastUpdated(String timeLastUpdated) {
    this.timeLastUpdated = timeLastUpdated;
  }


  public OwnedNft error(String error) {
    
    this.error = error;
    return this;
  }

   /**
   * String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.")

  public String getError() {
    return error;
  }


  public void setError(String error) {
    this.error = error;
  }


  public OwnedNft contractMetadata(NftContractMetadata contractMetadata) {
    
    this.contractMetadata = contractMetadata;
    return this;
  }

   /**
   * Get contractMetadata
   * @return contractMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NftContractMetadata getContractMetadata() {
    return contractMetadata;
  }


  public void setContractMetadata(NftContractMetadata contractMetadata) {
    this.contractMetadata = contractMetadata;
  }


  public OwnedNft spamInfo(NftSpamInfo spamInfo) {
    
    this.spamInfo = spamInfo;
    return this;
  }

   /**
   * Get spamInfo
   * @return spamInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NftSpamInfo getSpamInfo() {
    return spamInfo;
  }


  public void setSpamInfo(NftSpamInfo spamInfo) {
    this.spamInfo = spamInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OwnedNft ownedNft = (OwnedNft) o;
    return Objects.equals(this.contract, ownedNft.contract) &&
        Objects.equals(this.id, ownedNft.id) &&
        Objects.equals(this.balance, ownedNft.balance) &&
        Objects.equals(this.title, ownedNft.title) &&
        Objects.equals(this.description, ownedNft.description) &&
        Objects.equals(this.tokenUri, ownedNft.tokenUri) &&
        Objects.equals(this.media, ownedNft.media) &&
        Objects.equals(this.metadata, ownedNft.metadata) &&
        Objects.equals(this.timeLastUpdated, ownedNft.timeLastUpdated) &&
        Objects.equals(this.error, ownedNft.error) &&
        Objects.equals(this.contractMetadata, ownedNft.contractMetadata) &&
        Objects.equals(this.spamInfo, ownedNft.spamInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contract, id, balance, title, description, tokenUri, media, metadata, timeLastUpdated, error, contractMetadata, spamInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OwnedNft {\n");
    sb.append("    contract: ").append(toIndentedString(contract)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tokenUri: ").append(toIndentedString(tokenUri)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    timeLastUpdated: ").append(toIndentedString(timeLastUpdated)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    contractMetadata: ").append(toIndentedString(contractMetadata)).append("\n");
    sb.append("    spamInfo: ").append(toIndentedString(spamInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

